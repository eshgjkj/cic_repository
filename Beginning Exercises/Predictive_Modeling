import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Read the CSV file
df = pd.read_csv('Netflix_Revenue.csv')

# Extract the necessary columns
dates = pd.to_datetime(df['Date'], dayfirst=True)  # Convert the 'Date' column to datetime format with day-first specified
uacn_revenue = df['UACN Revenue']  # Extract the 'UACN Revenue' column

# Create a linear regression model
model = LinearRegression()

# Convert dates to numerical values for modeling
X = dates.astype('int64').values.reshape(-1, 1)  # Convert dates to numerical values and reshape the array

# Fit the model
model.fit(X, uacn_revenue)  # Train the linear regression model on the dates and UACN revenue

# Predict the revenue
predicted_revenue = model.predict(X)  # Use the trained model to predict the revenue based on the dates

# Calculate RMSE
mse = mean_squared_error(uacn_revenue, predicted_revenue)  # Calculate the mean squared error
rmse = mse ** 0.5  # Calculate the root mean squared error

# Print RMSE
print("Root Mean Squared Error:", rmse)

# Plotting the line graph
plt.plot(dates, uacn_revenue, label='Actual Revenue')  # Plot the actual revenue over time
plt.plot(dates, predicted_revenue, label='Predicted Revenue')  # Plot the predicted revenue over time

# Customize the plot
plt.xlabel('Date')  # Set the label for the x-axis
plt.ylabel('Revenue')  # Set the label for the y-axis
plt.title('Actual vs Predicted UACN Revenue Over Time')  # Set the title of the plot
plt.legend()  # Display the legend

# Rotate x-axis tick labels for better readability
plt.xticks(rotation=45)

# Display the line graph
plt.show()





